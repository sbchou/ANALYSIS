# plot interaction b/t source and candidate party
interaction.plot(lmm.data[(lmm.data$source=='CNN') | (lmm.data$source=='AP'),]$source, lmm.data[(lmm.data$source=='CNN') | (lmm.data$source=='AP'),]$is_complex, lmm.data[(lmm.data$source=='CNN') | (lmm.data$source=='AP'),]$trust, type="b",
trace.label = "Candidate's Party",
#leg.bty="o", per2.leg.bg="beige",lwd=2, pch=c(18,24,22),
xlab= "Source",
ylab="Trust",
#title="Interaction Between Source and Candidate's Party",
cex.lab=1.25, cex.axis=1.25, cex.main=1.25, cex.sub=1.25)
# plot interaction b/t source and candidate party
interaction.plot(lmm.data[(lmm.data$source=='CNN') | (lmm.data$source=='AP'),]$source, lmm.data[(lmm.data$source=='CNN') | (lmm.data$source=='AP'),]$is_complex, lmm.data[(lmm.data$source=='CNN') | (lmm.data$source=='AP'),]$trust, type="b",
trace.label = "Candidate's Party",
#leg.bty="o", per2.leg.bg="beige",lwd=2, pch=c(18,24,22),
xlab= "Source",
ylab="Trust")
#title="Interaction Between Source and Candidate's Party",
#cex.lab=1.25, cex.axis=1.25, cex.main=1.25, cex.sub=1.25)
lmm.data2 = lmm.data[(lmm.data$source=='Fox') | (lmm.data$source=='CNN'),]
interaction.plot(lmm.data2$source, lmm.data2$candid.party, lmm.data2$trust, type="b",
trace.label = "Candidate's Party",
#leg.bty="o", per2.leg.bg="beige",lwd=2, pch=c(18,24,22),
xlab= "Source",
ylab="Trust",
#title="Interaction Between Source and Candidate's Party",
cex.lab=1.25, cex.axis=1.25, cex.main=1.25, cex.sub=1.25)
# plot interaction b/t source and candidate party
interaction.plot(lmm.data[(lmm.data$source=='CNN') | (lmm.data$source=='AP'),]$source, lmm.data[(lmm.data$source=='CNN') | (lmm.data$source=='AP'),]$is_complex, lmm.data[(lmm.data$source=='CNN') | (lmm.data$source=='AP'),]$trust, type="b",
trace.label = "Candidate's Party",
#leg.bty="o", per2.leg.bg="beige",lwd=2, pch=c(18,24,22),
xlab= "Source",
ylab="Trust")
#title="Interaction Between Source and Candidate's Party",
f1 <- lmer(trust ~ is_complex * source * candid.party * party + (1|worker_id), lmm.data)
summary(f1)
f1 <- lmer(trust ~ is_complex * source * candid.party * party + (1|worker_id), lmm.data)
summary(f1)
library(lme4)
library(lmerTest)
lmm.data <- read.table('../DATA/all_results/flattened_no_title.csv', header=TRUE, sep = ",", quote = "'")
nrow(lmm.data)
head(lmm.data)
# remove NaN for some reason the python code breaks the CSV
lmm.data <- lmm.data[complete.cases(lmm.data),]
nrow(lmm.data)
# SHOULD BE 1278!!
library(stargazer)
lmm.data$is_complex = factor(lmm.data$is_complex, labels=c('Low','High'))
lmm.data$source <- factor(lmm.data$source, labels=c('CNN','Fox','None','AP'))
lmm.data$gender <- factor(lmm.data$gender)
lmm.data$party <- factor(lmm.data$party)
lmm.data$voting_for <- factor(lmm.data$voting_for)
#lmm.data$fair = factor(lmm.data$fair, labels=c('Very Unfair', 'Unfair','Neutral','Fair','Very Fair')
#lmm.data$trust = as.numeric(lmm.data$trust)
lmm.data$fair = as.numeric((lmm.data$fair))
lmm.data$trust = as.numeric((lmm.data$trust))
library(lme4)
library(lmerTest)
library(stargazer)
lmm.data <- read.table('../DATA/all_results/flattened_no_title.csv', header=TRUE, sep = ",", quote = "'")
nrow(lmm.data)
head(lmm.data)
# remove NaN for some reason the python code breaks the CSV
lmm.data <- lmm.data[complete.cases(lmm.data),]
nrow(lmm.data)
# SHOULD BE 1278!!
lmm.data$is_complex = factor(lmm.data$is_complex, labels=c('Low','High'))
lmm.data$source <- factor(lmm.data$source, labels=c('CNN','Fox','None','AP'))
lmm.data$gender <- factor(lmm.data$gender)
lmm.data$party <- factor(lmm.data$party)
lmm.data$voting_for <- factor(lmm.data$voting_for)
#lmm.data$fair = factor(lmm.data$fair, labels=c('Very Unfair', 'Unfair','Neutral','Fair','Very Fair')
#lmm.data$trust = as.numeric(lmm.data$trust)
lmm.data$fair = as.numeric((lmm.data$fair))
lmm.data$trust = as.numeric((lmm.data$trust))
# Code candidate party
candid.party = rep(0,nrow(lmm.data))
candid.party = (lmm.data$candidate=="cruz") | (lmm.data$candidate=="trump")
lmm.data = cbind(lmm.data, candid.party)
lmm.data$candid.party <- factor(lmm.data$candid.party, labels=c('democrat','republican'))
# First: source, party of candidate, complexity
f1 <- aov(fair ~  is_complex * source* candid.party + Error(worker_id/(is_complex*candid.party)), data=lmm.data)
# z1 <- lmer(fair ~ source * candid.party + is_complex + (1|worker_id), lmm.data) # removes three way interaction
#anova(l1, z1)
#p are not significantly diff
summary(f1)
stargazer(f1)
f1
stargazer(summary(f1))
f1
stargazer(f1)
z1 <- lmer(fair ~ source * candid.party + is_complex + (1|worker_id), lmm.data) # removes three way interaction
summary(z1)
stargazer(z1)
library(lme4)
library(lmerTest)
library(stargazer)
lmm.data <- read.table('../DATA/all_results/flattened_no_title.csv', header=TRUE, sep = ",", quote = "'")
nrow(lmm.data)
head(lmm.data)
# remove NaN for some reason the python code breaks the CSV
lmm.data <- lmm.data[complete.cases(lmm.data),]
nrow(lmm.data)
# SHOULD BE 1278!!
lmm.data$is_complex = factor(lmm.data$is_complex, labels=c('Low','High'))
lmm.data$source <- factor(lmm.data$source, labels=c('CNN','Fox','None','AP'))
lmm.data$gender <- factor(lmm.data$gender)
lmm.data$party <- factor(lmm.data$party)
lmm.data$voting_for <- factor(lmm.data$voting_for)
#lmm.data$fair = factor(lmm.data$fair, labels=c('Very Unfair', 'Unfair','Neutral','Fair','Very Fair')
#lmm.data$trust = as.numeric(lmm.data$trust)
lmm.data$fair = as.numeric((lmm.data$fair))
lmm.data$trust = as.numeric((lmm.data$trust))
# Code candidate party
candid.party = rep(0,nrow(lmm.data))
candid.party = (lmm.data$candidate=="cruz") | (lmm.data$candidate=="trump")
lmm.data = cbind(lmm.data, candid.party)
lmm.data$candid.party <- factor(lmm.data$candid.party, labels=c('democrat','republican'))
f1 <- aov(fair ~  is_complex * source* candid.party + Error(worker_id/(is_complex*candid.party)), data=lmm.data)
summary(f1)
stargazer(f1)
f1 <- lm(fair ~  is_complex * source* candid.party + Error(worker_id/(is_complex*candid.party)), data=lmm.data)
summary(f1)
stargazer(lm)
#library(lme4)
library(lmerTest)
library(stargazer)
lmm.data <- read.table('../DATA/all_results/flattened_no_title.csv', header=TRUE, sep = ",", quote = "'")
nrow(lmm.data)
head(lmm.data)
# remove NaN for some reason the python code breaks the CSV
lmm.data <- lmm.data[complete.cases(lmm.data),]
nrow(lmm.data)
# SHOULD BE 1278!!
lmm.data$is_complex = factor(lmm.data$is_complex, labels=c('Low','High'))
lmm.data$source <- factor(lmm.data$source, labels=c('CNN','Fox','None','AP'))
lmm.data$gender <- factor(lmm.data$gender)
lmm.data$party <- factor(lmm.data$party)
lmm.data$voting_for <- factor(lmm.data$voting_for)
#lmm.data$fair = factor(lmm.data$fair, labels=c('Very Unfair', 'Unfair','Neutral','Fair','Very Fair')
#lmm.data$trust = as.numeric(lmm.data$trust)
lmm.data$fair = as.numeric((lmm.data$fair))
lmm.data$trust = as.numeric((lmm.data$trust))
# Code candidate party
candid.party = rep(0,nrow(lmm.data))
candid.party = (lmm.data$candidate=="cruz") | (lmm.data$candidate=="trump")
lmm.data = cbind(lmm.data, candid.party)
lmm.data$candid.party <- factor(lmm.data$candid.party, labels=c('democrat','republican'))
# First: source, party of candidate, complexity
f1 <- aov(fair ~  is_complex * source* candid.party + Error(worker_id/(is_complex*candid.party)), data=lmm.data)
summary(f1)
stargazer(f1)
library(lme4)
#library(lmerTest)
library(stargazer)
lmm.data <- read.table('../DATA/all_results/flattened_no_title.csv', header=TRUE, sep = ",", quote = "'")
nrow(lmm.data)
head(lmm.data)
# remove NaN for some reason the python code breaks the CSV
lmm.data <- lmm.data[complete.cases(lmm.data),]
nrow(lmm.data)
# SHOULD BE 1278!!
lmm.data$is_complex = factor(lmm.data$is_complex, labels=c('Low','High'))
lmm.data$source <- factor(lmm.data$source, labels=c('CNN','Fox','None','AP'))
lmm.data$gender <- factor(lmm.data$gender)
lmm.data$party <- factor(lmm.data$party)
lmm.data$voting_for <- factor(lmm.data$voting_for)
#lmm.data$fair = factor(lmm.data$fair, labels=c('Very Unfair', 'Unfair','Neutral','Fair','Very Fair')
#lmm.data$trust = as.numeric(lmm.data$trust)
lmm.data$fair = as.numeric((lmm.data$fair))
lmm.data$trust = as.numeric((lmm.data$trust))
# Code candidate party
candid.party = rep(0,nrow(lmm.data))
candid.party = (lmm.data$candidate=="cruz") | (lmm.data$candidate=="trump")
lmm.data = cbind(lmm.data, candid.party)
lmm.data$candid.party <- factor(lmm.data$candid.party, labels=c('democrat','republican'))
# First: source, party of candidate, complexity
f1 <- aov(fair ~  is_complex * source* candid.party + Error(worker_id/(is_complex*candid.party)), data=lmm.data)
summary(f1)
stargazer(f1)
z1 <- lmer(fair ~ source * candid.party + is_complex + (1|worker_id), lmm.data) # removes three way interaction
summary(z1)
stargazer(z1)
install.packages(xtable)
install.packages('xtable')
library(lme4)
library(lmerTest)
library(xtable)
lmm.data <- read.table('../DATA/all_results/flattened_no_title.csv', header=TRUE, sep = ",", quote = "'")
nrow(lmm.data)
head(lmm.data)
# remove NaN for some reason the python code breaks the CSV
lmm.data <- lmm.data[complete.cases(lmm.data),]
nrow(lmm.data)
# SHOULD BE 1278!!
lmm.data$is_complex = factor(lmm.data$is_complex, labels=c('Low','High'))
lmm.data$source <- factor(lmm.data$source, labels=c('CNN','Fox','None','AP'))
lmm.data$gender <- factor(lmm.data$gender)
lmm.data$party <- factor(lmm.data$party)
lmm.data$voting_for <- factor(lmm.data$voting_for)
#lmm.data$fair = factor(lmm.data$fair, labels=c('Very Unfair', 'Unfair','Neutral','Fair','Very Fair')
#lmm.data$trust = as.numeric(lmm.data$trust)
lmm.data$fair = as.numeric((lmm.data$fair))
lmm.data$trust = as.numeric((lmm.data$trust))
# Code candidate party
candid.party = rep(0,nrow(lmm.data))
candid.party = (lmm.data$candidate=="cruz") | (lmm.data$candidate=="trump")
lmm.data = cbind(lmm.data, candid.party)
lmm.data$candid.party <- factor(lmm.data$candid.party, labels=c('democrat','republican'))
# First: source, party of candidate, complexity
f1 <- aov(fair ~  is_complex * source* candid.party + Error(worker_id/(is_complex*candid.party)), data=lmm.data)
summary(f1)
xtable(f1)
z1 <- lmer(fair ~ source * candid.party + is_complex + (1|worker_id), lmm.data) # removes three way interaction
summary(z1)
xtable(z1)
library(lme4)
library(lmerTest)
in
install.packages('texreg')
library(lme4)
library(lmerTest)
library(xtable)
library(texreg)
lmm.data <- read.table('../DATA/all_results/flattened_no_title.csv', header=TRUE, sep = ",", quote = "'")
nrow(lmm.data)
head(lmm.data)
# remove NaN for some reason the python code breaks the CSV
lmm.data <- lmm.data[complete.cases(lmm.data),]
nrow(lmm.data)
# SHOULD BE 1278!!
lmm.data$is_complex = factor(lmm.data$is_complex, labels=c('Low','High'))
lmm.data$source <- factor(lmm.data$source, labels=c('CNN','Fox','None','AP'))
lmm.data$gender <- factor(lmm.data$gender)
lmm.data$party <- factor(lmm.data$party)
lmm.data$voting_for <- factor(lmm.data$voting_for)
#lmm.data$fair = factor(lmm.data$fair, labels=c('Very Unfair', 'Unfair','Neutral','Fair','Very Fair')
#lmm.data$trust = as.numeric(lmm.data$trust)
lmm.data$fair = as.numeric((lmm.data$fair))
lmm.data$trust = as.numeric((lmm.data$trust))
# Code candidate party
candid.party = rep(0,nrow(lmm.data))
candid.party = (lmm.data$candidate=="cruz") | (lmm.data$candidate=="trump")
lmm.data = cbind(lmm.data, candid.party)
lmm.data$candid.party <- factor(lmm.data$candid.party, labels=c('democrat','republican'))
# First: source, party of candidate, complexity
f1 <- aov(fair ~  is_complex * source* candid.party + Error(worker_id/(is_complex*candid.party)), data=lmm.data)
summary(f1)
texreg(f1)
z1 <- lmer(fair ~ source * candid.party + is_complex + (1|worker_id), lmm.data) # removes three way interaction
summary(z1)
texreg(z1)
summary(f1)
z1 <- lmer(fair ~ source * candid.party + is_complex + (1|worker_id), lmm.data) # removes three way interaction
summary(z1)
f3 <- lmer(fair~source * candid.party + (1|worker_id), lmm.data)
library(lme4)
library(lmerTest)
lmm.data <- read.table('../DATA/all_results/flattened_no_title.csv', header=TRUE, sep = ",", quote = "'")
nrow(lmm.data)
head(lmm.data)
# remove NaN for some reason the python code breaks the CSV
lmm.data <- lmm.data[complete.cases(lmm.data),]
nrow(lmm.data)
# SHOULD BE 1278!!
lmm.data$is_complex = factor(lmm.data$is_complex, labels=c('Low','High'))
lmm.data$source <- factor(lmm.data$source, labels=c('CNN','Fox','None','AP'))
lmm.data$gender <- factor(lmm.data$gender)
lmm.data$party <- factor(lmm.data$party)
lmm.data$voting_for <- factor(lmm.data$voting_for)
#lmm.data$fair = factor(lmm.data$fair, labels=c('Very Unfair', 'Unfair','Neutral','Fair','Very Fair')
#lmm.data$trust = as.numeric(lmm.data$trust)
lmm.data$fair = as.numeric((lmm.data$fair))
lmm.data$trust = as.numeric((lmm.data$trust))
# Code candidate party
candid.party = rep(0,nrow(lmm.data))
candid.party = (lmm.data$candidate=="cruz") | (lmm.data$candidate=="trump")
lmm.data = cbind(lmm.data, candid.party)
lmm.data$candid.party <- factor(lmm.data$candid.party, labels=c('democrat','republican'))
f1 <- aov(trust ~  is_complex * source* candid.party + Error(worker_id/(is_complex*candid.party)), data=lmm.data)
l1 <- lmer(trust ~  is_complex * source* party + (1 | worker_id), lmm.data)
summary(f1)
summary(l1)
f1 <- aov(trust ~  is_complex * source* party * candid.party + Error(worker_id/(is_complex*candid.party)), data=lmm.data)
#l1 <- lmer(trust ~  is_complex * source* party + (1 | worker_id), lmm.data)
summary(f1)
l1 <- lmer(trust ~  is_complex * source* party + (1 | worker_id), lmm.data)
summary(l1)
l1 <- lmer(trust ~  is_complex * source* party * candid.party + (1 | worker_id), lmm.data)
summary(l1)
l1 <- lmer(trust ~  is_complex + source * party * candid.party + (1 | worker_id), lmm.data)
summary(l1)
suumary(lm(trust ~ is_complex, data=lmm.data))
summary(lm(trust ~ is_complex, data=lmm.data))
summary(lm(trust ~ is_complex + source(), data=lmm.data))
summary(lm(trust ~ is_complex + source, data=lmm.data))
summary(lmm.data)
summary(lmm.data$is_complex)
summary(lm(trust ~ is_complex + source(), data=lmm.data))
summary(lm(trust ~ is_complex + source, data=lmm.data))
summary(lmer(trust ~ is_complex * source * party, data=lmm.data))
summary(lmer(trust ~ is_complex * source * party + (1 | worker_id), data=lmm.data))
summary(lmer(trust ~ is_complex * source * party * candid.party + (1 | worker_id), data=lmm.data))
summary(lmer(trust ~  source * party + (1 | worker_id), data=lmm.data))
summary(lm(trust ~  is_complex, data=lmm.data))
summary(lm(trust ~  party, data=lmm.data))
summary(lm(trust ~  source(), data=lmm.data))
summary(lm(trust ~  source, data=lmm.data))
summary(lm(fair ~  source, data=lmm.data))
library(lme4)
library(lmerTest)
library(stargazer)
library(xtable)
library(texreg)
lmm.data <- read.table('../DATA/all_results/flattened_no_title.csv', header=TRUE, sep = ",", quote = "'")
nrow(lmm.data)
head(lmm.data)
# remove NaN for some reason the python code breaks the CSV
lmm.data <- lmm.data[complete.cases(lmm.data),]
nrow(lmm.data)
# SHOULD BE 1278!!
library(lme4)
library(lmerTest)
library(stargazer)
library(xtable)
library(texreg)
lmm.data <- read.table('../DATA/all_results/flattened_no_title.csv', header=TRUE, sep = ",", quote = "'")
nrow(lmm.data)
head(lmm.data)
# remove NaN for some reason the python code breaks the CSV
lmm.data <- lmm.data[complete.cases(lmm.data),]
nrow(lmm.data)
# SHOULD BE 1278!!
lmm.data$reading_levels = factor(lmm.data$is_complex, labels=c('Low','High'))
lmm.data$source <- factor(lmm.data$source, labels=c('CNN','Fox','None','AP'))
lmm.data$party <- factor(lmm.data$party)
lmm.data$voting_for <- factor(lmm.data$voting_for)
lmm.data$trust = as.numeric((lmm.data$trust))
# Code candidate party
candid.party = rep(0,nrow(lmm.data))
candid.party = (lmm.data$candidate=="cruz") | (lmm.data$candidate=="trump")
lmm.data = cbind(lmm.data, candid.party)
lmm.data$candid.party <- factor(lmm.data$candid.party, labels=c('democrat','republican'))
library(lme4)
library(lmerTest)
library(stargazer)
library(xtable)
library(texreg)
data <- read.table('../DATA/all_results/flattened_no_title.csv', header=TRUE, sep = ",", quote = "'")
nrow(data)
head(data)
# remove NaN for some reason the python code breaks the CSV
data <- data[complete.cases(data),]
nrow(data)
# SHOULD BE 1278!!
data$reading_levels = factor(data$is_complex, labels=c('Low','High'))
data$source <- factor(data$source, labels=c('CNN','Fox','None','AP'))
data$party <- factor(data$party)
data$voting_for <- factor(data$voting_for)
data$trust = as.numeric((data$trust))
# Code candidate party
candid.party = rep(0,nrow(data))
candid.party = (data$candidate=="cruz") | (data$candidate=="trump")
data = cbind(data, candid.party)
data$candid.party <- factor(data$candid.party, labels=c('democrat','republican'))
library(lme4)
library(lmerTest)
library(stargazer)
library(xtable)
library(texreg)
data <- read.table('../DATA/all_results/flattened_no_title.csv', header=TRUE, sep = ",", quote = "'")
nrow(data)
head(data)
# remove NaN for some reason the python code breaks the CSV
data <- data[complete.cases(data),]
nrow(data)
# SHOULD BE 1278!!
data$reading_level = factor(data$is_complex, labels=c('Low','High'))
data$source <- factor(data$source, labels=c('CNN','Fox','None','AP'))
data$party <- factor(data$party)
data$voting_for <- factor(data$voting_for)
data$trust = as.numeric((data$trust))
# Code candidate party
candid.party = rep(0,nrow(data))
candid.party = (data$candidate=="cruz") | (data$candidate=="trump")
data = cbind(data, candid.party)
data$candid.party <- factor(data$candid.party, labels=c('democrat','republican'))
### First, Reading Level Effects ###
model.lm.reading_level <- lm(trust ~ reading_level, data)
summary(model.lm.reading_level)
library(lme4)
library(lmerTest)
library(stargazer)
library(xtable)
library(texreg)
data <- read.table('../DATA/all_results/flattened_no_title.csv', header=TRUE, sep = ",", quote = "'")
nrow(data)
head(data)
# remove NaN for some reason the python code breaks the CSV
data <- data[complete.cases(data),]
nrow(data)
# SHOULD BE 1278!!
data$reading_level = factor(data$is_complex) #, labels=c('Low','High'))
data$source <- factor(data$source, labels=c('CNN','Fox','None','AP'))
data$party <- factor(data$party)
data$voting_for <- factor(data$voting_for)
data$trust = as.numeric((data$trust))
# Code candidate party
candid.party = rep(0,nrow(data))
candid.party = (data$candidate=="cruz") | (data$candidate=="trump")
data = cbind(data, candid.party)
data$candid.party <- factor(data$candid.party, labels=c('democrat','republican'))
### First, Reading Level Effects ###
model.lm.reading_level <- lm(trust ~ reading_level, data)
summary(model.lm.reading_level)
stargazer(model.lm.reading_level)
library(MASS)
library(AER)
model.pois.reading_level <- glm(trust ~ reading_level, data=data, family = poisson())
summary(model.pois.reading_level)
model.pois.reading_level <- glm(trust ~ reading_level, data=data, family =poisson)
summary(model.pois.reading_level)
library(lme4)
library(lmerTest)
library(stargazer)
library(xtable)
library(texreg)
library(MASS)
library(AER)
data <- read.table('../DATA/all_results/flattened_no_title.csv', header=TRUE, sep = ",", quote = "'")
nrow(data)
head(data)
# remove NaN for some reason the python code breaks the CSV
data <- data[complete.cases(data),]
nrow(data)
# SHOULD BE 1278!!
data$reading_level = factor(data$is_complex) #, labels=c('Low','High'))
data$source <- factor(data$source, labels=c('CNN','Fox','None','AP'))
data$party <- factor(data$party)
data$voting_for <- factor(data$voting_for)
data$trust = as.numeric((data$trust))
# Code candidate party
candid.party = rep(0,nrow(data))
candid.party = (data$candidate=="cruz") | (data$candidate=="trump")
data = cbind(data, candid.party)
data$candid.party <- factor(data$candid.party, labels=c('democrat','republican'))
### First, Reading Level Effects ###
model.lm.reading_level <- lm(trust ~ reading_level, data)
summary(model.lm.reading_level)
stargazer(model.lm.reading_level)
model.pois.reading_level <- glm(trust ~ reading_level, data=data, family =poisson)
summary(model.pois.reading_level)
model.lm.source <- lm(trust ~ source, data)
summary(model.lm.source)
stargazer(model.lm.source)
data$disclose[data$source == 'None']= "no source"
data$disclose[data$source %in% c('CNN','Fox','AP')]= "show source"
data$disclose <- factor(data$disclose)
model.lm.disclose <- lm(trust ~ disclose, data)
summary(model.lm.disclose)
stargazer(model.lm.disclose)
model.lm.sourceparty <- lm(trust ~ disclose * party, data)
summary(model.lm.sourceparty)
stargazer(model.lm.sourceparty)
model.lm.sourceparty <- lm(trust ~ disclose * party, data)
summary(model.lm.sourceparty)
summary(data$source)
stand2 = rep(0,nrow(data))
#stand1[data$party %in% c("independent_other", "no_affiliation")] = 1
stand2[as.character(data$source) == as.character(data$party)] = 2
data = cbind(data, stand2)
#data$stand1 <- factor(data$stand1, labels=c('opposite','neutral','matching'))
data$stand2 <- factor(data$stand2, labels=c('no matching','matching'))
stand2 = rep(0,nrow(data))
stand2
partisans <- read.table('../DATA/all_results/partisans_match.csv', header=TRUE, sep = ",", quote = "'")
nrow(data)
head(data)
nrow(partisans)
head(partisans)
# remove NaN for some reason the python code breaks the CSV
partisans <- partisans[complete.cases(partisans),]
nrow(partisans)
partisans$match = factor(data$match)
partisans$match = factor(partisans$match)
partisans$trust = as.numeric((partisans$trust))
model.lm.match <- lm(trust ~ match, data=partisans)
summary(model.lm.match)
partisans <- read.table('../DATA/all_results/partisans_match.csv', header=TRUE, sep = ",", quote = "'")
nrow(partisans)
head(partisans)
# remove NaN for some reason the python code breaks the CSV
partisans <- partisans[complete.cases(partisans),]
nrow(partisans)
partisans$trust = as.numeric((partisans$trust))
partisans$match = factor(partisans$match)
model.lm.match <- lm(trust ~ match, data=partisans)
summary(model.lm.match)
partisans <- read.table('../DATA/all_results/partisans_match.csv', header=TRUE, sep = ",", quote = "'")
nrow(partisans)
head(partisans)
# remove NaN for some reason the python code breaks the CSV
partisans <- partisans[complete.cases(partisans),]
nrow(partisans)
partisans$trust = as.numeric((partisans$trust))
partisans$match = factor(partisans$match)
model.lm.match <- lm(trust ~ match, data=partisans)
summary(model.lm.match)
partisans$match = factor(partisans$match, labels = c('Neutral', 'Disagree', 'Agree'))
model.lm.match <- lm(trust ~ match, data=partisans)
summary(model.lm.match)
stargazer(model.lm.match)
summary(model.lm.match)
summary(partisans)
